pipeline {
    agent any

    stages {
        stage('Pull code from branch main') {
            steps {
                git branch: 'main', url: 'https://github.com/gwattana/SoftwareDevTools_Final.git'
            }
        }
        stage('Download dependency') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                }
            }
        }
        // stage('Run unit test') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run unit-test'
        //         }
        //     }
        // }
        // stage('Create unit test report') {
        //     steps {
        //         dir('frontend') {
        //             script {
        //                 if (!fileExists('reports')) {
        //                     sh 'mkdir reports'
        //                 }
        //             }
        //             sh 'yarn run unit-test 2> reports/unit.txt'
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'reports', reportFiles: 'unit.txt', reportName: 'Unit Test Report', reportTitles: 'Unit Test Report'])
        //         }
        //     }
        // }
        // stage('Run unit test coverage') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run unit-test-coverage'
        //         }
        //     }
        // }
        // stage('Create unit test coverage report') {
        //     steps {
        //         dir('frontend') {
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'coverage/lcov-report', reportFiles: 'index.html', reportName: 'Unit Test Coverage Report', reportTitles: 'Unit Test Coverage Report'])
        //         }
        //     }
        // }
        // stage('Run component test') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run component-test -u'
        //         }
        //     }
        // }
        // stage('Create component test report') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run component-test -u 2> reports/component.txt'
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'reports', reportFiles: 'component.txt', reportName: 'Component Test Report', reportTitles: 'Component Test Report'])
        //         }
        //     }
        // }
        // stage('Run component test coverage') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run component-test-coverage  -u'
        //         }
        //     }
        // }
        // stage('Create component test coverage report') {
        //     steps {
        //         dir('frontend') {
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'coverage/lcov-report', reportFiles: 'index.html', reportName: 'Component Test Coverage Report', reportTitles: 'Component Test Coverage Report'])
        //         }
        //     }
        // }
        stage('Build') {
            steps {
                dir('frontend') {
                    sh 'npm build'
                }
            }
        }
        stage('deploy') {
            steps {
                script  {
                    def remote = [:]
                    remote.name = "root"
                    remote.host = '159.65.12.177'
                    remote.user = 'root'
                    remote.password = 'xitgmLwmp12q'
                    remote.allowAnyHosts = true
                    sshCommand remote: remote, command: "git clonehttps://github.com/gwattana/SoftwareDevTools_Final.git"
                    sshCommand remote: remote, command: "docker-compose -f Project-SW-Dev-and-Env/deployment/docker-compose.yaml build next-app"
                    sshCommand remote: remote, command: "docker-compose -f Project-SW-Dev-and-Env/deployment/docker-compose.yaml up next-app -d"
                    sshCommand remote: remote, command: "rm -r Project-SW-Dev-and-Env"
                }
            }
        }
        // stage('Run E2E test') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run e2e-test'
        //         }
        //     }
        // }
        // stage('Create E2E test report') {
        //     steps {
        //         dir('frontend') {
        //             sh 'yarn run e2e-test 2> reports/e2e.txt'
        //             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'reports', reportFiles: 'e2e.txt', reportName: 'E2E Test Report', reportTitles: 'E2E Test Report'])
        //         }
        //     }
        // }
    }
}